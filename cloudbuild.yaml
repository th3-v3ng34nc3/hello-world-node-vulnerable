steps:
  # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '${_IMAGE_URL}:${_IMAGE_TAG}', '.']

  # Step 2: Push the Docker image to GCR
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_IMAGE_URL}:${_IMAGE_TAG}']

  # Step 3: Download Trivy standalone binary and scan the container image
  - name: 'aquasec/trivy'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        trivy image --format json --output /workspace/trivy-report.json ${_IMAGE_URL}:${_IMAGE_TAG}
    id: 'trivy-scan'

  # Step 4: Upload the Trivy report to Cloud Storage
  - name: 'gcr.io/cloud-builders/gsutil'
    args: ['cp', '/workspace/trivy-report.json', 'gs://pipeline-github/trivy-report.json']
    waitFor: ['trivy-scan']

  # Step 5: Print Trivy Results
  - name: 'cat'
    args: ['/workspace/trivy-report.json']
    waitFor: ['trivy-scan']

  # Step 6: Push report to CSPM panel
  - name: 'gcr.io/cloud-builders/curl'
    args:
      - '--location'
      - '--request'
      - 'POST'
      - 'https://${CSPM_URL}/api/v1/artifact/?tenant_id=${TENANT_ID}&data_type=TR&save_to_s3=false'
      - '--header'
      - 'Authorization: Bearer ${CSPM_TOKEN}'
      - '--form'
      - 'file=@"/workspace/trivy-report.json"'

substitutions:
  _IMAGE_URL: 'gcr.io/gcp-cicd-test-425406/aditya-test'
  _IMAGE_TAG: 'latest'

images:
  - 'gcr.io/gcp-cicd-test-425406/aditya-test:latest'

logsBucket: 'gs://pipeline-github'
timeout: '1200s'
