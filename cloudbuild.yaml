steps:
  # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '${_IMAGE_URL}:${_IMAGE_TAG}', '.']

  # Step 2: Push the Docker image to GCR
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_IMAGE_URL}:${_IMAGE_TAG}']

  # Step 3: Scan the container image with Trivy and save the report
  - name: 'aquasec/trivy'
    args: ['image', '--format', 'json', '--output', '/workspace/trivy-report.json', '${_IMAGE_URL}:${_IMAGE_TAG}']
    id: 'trivy-scan'

  # Step 4: Upload the Trivy report to Cloud Storage
  - name: 'gcr.io/cloud-builders/gsutil'
    args: ['cp', '/workspace/trivy-report.json', 'gs://pipeline-github/trivy-report.json']
    waitFor: ['trivy-scan']

  # Step 5: Check the vulnerabilities
  - name: 'aquasec/trivy'
    args: ['image', '${_IMAGE_URL}:${_IMAGE_TAG}']

substitutions:
  _IMAGE_URL: 'gcr.io/gcp-cicd-test-425406/aditya-test'
  _IMAGE_TAG: 'latest'

images:
  - 'gcr.io/gcp-cicd-test-425406/aditya-test:latest'

logsBucket: 'gs://pipeline-github'
timeout: '1200s'
